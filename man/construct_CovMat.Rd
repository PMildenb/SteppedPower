% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/construct_CovMat.R
\name{construct_CovMat}
\alias{construct_CovMat}
\title{construct_CovMat}
\usage{
construct_CovMat(
  SumCl = NULL,
  timepoints = NULL,
  sigma,
  tau,
  eta = NULL,
  tauAR = NULL,
  etaAR = NULL,
  rho = NULL,
  gamma = NULL,
  trtMat = NULL,
  N = NULL,
  CovBlk = NULL,
  psi = NULL,
  INDIV_LVL = FALSE
)
}
\arguments{
\item{SumCl}{total number of clusters}

\item{timepoints}{numeric, scalar}

\item{sigma}{numeric (scalar, vector or matrix), residual error of cluster means.}

\item{tau}{numeric (scalar, vector or matrix), standard deviation of random intercepts}

\item{eta}{numeric (scalar or matrix), standard deviation of random slopes.
If `eta` is given as scalar, `trtMat` is needed as well.}

\item{tauAR}{numeric (scalar), value between 0 and 1. Defaults to NULL.
If `tauAR` is not NULL, the random intercept
`tau` is AR1-correlated. *Currently not compatible with `rho`!=0 !*}

\item{etaAR}{numeric (scalar), value between 0 and 1. Defaults to NULL.
If `etaAR` is not NULL, the random slope
`eta` is AR1-correlated. *Currently not compatible with `rho`!=0 !*}

\item{rho}{numeric (scalar), correlation of random effects `tau` and `eta`.}

\item{gamma}{numeric (scalar), standard deviation of a random time effect.}

\item{trtMat}{a matrix of dimension *#Cluster* x *timepoints* as produced by
the function `construct_trtMat`, indicating the cluster-periods that receive
interventional treatment. Defaults to NULL. If trtMat is given, the arguments
`SumCl` and `timepoints` are ignored (!).}

\item{N}{numeric (scalar, vector or matrix), number of individuals per cluster.
Defaults to 'rep(1,sum(Cl))' if not passed.}

\item{CovBlk}{a matrix of dimension *timepoints* x *timepoints*.}

\item{psi}{random individuum effect. Leads to a closed cohort setting}
}
\value{
a covariance matrix
}
\description{
constructs a covariance matrix, a bloc diagonal matrix. Calls `construct_CovBlk`
for each block.
}
\examples{
construct_CovMat(SumCl=2,timepoints=3,
                 sigma=matrix(c(1,2,2,1,1,2),nrow=2, byrow=TRUE),
                 tau=matrix(c(.2,.1,.1,.2,.2,.1),nrow=2, byrow=TRUE),N=c(20,16))
}
